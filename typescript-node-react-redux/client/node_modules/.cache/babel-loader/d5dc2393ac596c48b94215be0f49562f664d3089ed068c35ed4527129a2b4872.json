{"ast":null,"code":"import { addUser, setUser } from \"../feactures/user/UserSlices\";\n//const dispatch = useAppDispatch();\n\n//import { useAppDispatch } from \"../../hooks/useStore\";\nlet uri = \"http://localhost:3001/api/user\";\nconst fetchUser = () => async dispatch => {\n  try {\n    const res = await fetch(uri);\n    const users = await res.json(); //la nfo esta en json() si es axios se usa .data();\n\n    dispatch(setUser(users));\n    return users;\n  } catch (error) {\n    if (error instanceof Error) {\n      console.log(error.message);\n    }\n  }\n};\n\n// Función para agregar un usuario\nconst addUserToServer = user => {\n  return async dispatch => {\n    const res = await fetch(uri, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(user)\n    });\n    if (!res.ok) {\n      throw new Error(\"Failed to add user\");\n    }\n    const newUser = await res.json();\n    dispatch(addUser(newUser));\n    return newUser;\n  };\n};\nexport { fetchUser, addUserToServer };","map":{"version":3,"names":["addUser","setUser","uri","fetchUser","dispatch","res","fetch","users","json","error","Error","console","log","message","addUserToServer","user","method","headers","body","JSON","stringify","ok","newUser"],"sources":["/media/ariel/ssd Datos_aux/typescript/wks-typescript/client/src/Redux/thunk/UserThunks.ts"],"sourcesContent":["import { addUser, setUser } from \"../feactures/user/UserSlices\";\nimport { AppDispatch } from \"../store\";\n\n//const dispatch = useAppDispatch();\n\n//import { useAppDispatch } from \"../../hooks/useStore\";\nlet uri = \"http://localhost:3001/api/user\";\n\nconst fetchUser = () => async (dispatch: AppDispatch) => {\n  try {\n    const res = await fetch(uri);\n    const users = await res.json(); //la nfo esta en json() si es axios se usa .data();\n\n    dispatch(setUser(users));\n    return users;\n  } catch (error) {\n    if (error instanceof Error) {\n      console.log(error.message);\n    }\n  }\n};\n\n// Función para agregar un usuario\nconst addUserToServer = (user: { name: string; lastName: string }) => {\n  return async (dispatch: AppDispatch) => {\n    const res = await fetch(uri, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(user),\n    });\n    if (!res.ok) {\n      throw new Error(\"Failed to add user\");\n    }\n    const newUser = await res.json();\n\n    dispatch(addUser(newUser));\n    return newUser;\n  };\n};\n\nexport { fetchUser, addUserToServer };\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,OAAO,QAAQ,8BAA8B;AAG/D;;AAEA;AACA,IAAIC,GAAG,GAAG,gCAAgC;AAE1C,MAAMC,SAAS,GAAGA,CAAA,KAAM,MAAOC,QAAqB,IAAK;EACvD,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACJ,GAAG,CAAC;IAC5B,MAAMK,KAAK,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC;;IAEhCJ,QAAQ,CAACH,OAAO,CAACM,KAAK,CAAC,CAAC;IACxB,OAAOA,KAAK;EACd,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,IAAIA,KAAK,YAAYC,KAAK,EAAE;MAC1BC,OAAO,CAACC,GAAG,CAACH,KAAK,CAACI,OAAO,CAAC;IAC5B;EACF;AACF,CAAC;;AAED;AACA,MAAMC,eAAe,GAAIC,IAAwC,IAAK;EACpE,OAAO,MAAOX,QAAqB,IAAK;IACtC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACJ,GAAG,EAAE;MAC3Bc,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;IAC3B,CAAC,CAAC;IACF,IAAI,CAACV,GAAG,CAACgB,EAAE,EAAE;MACX,MAAM,IAAIX,KAAK,CAAC,oBAAoB,CAAC;IACvC;IACA,MAAMY,OAAO,GAAG,MAAMjB,GAAG,CAACG,IAAI,CAAC,CAAC;IAEhCJ,QAAQ,CAACJ,OAAO,CAACsB,OAAO,CAAC,CAAC;IAC1B,OAAOA,OAAO;EAChB,CAAC;AACH,CAAC;AAED,SAASnB,SAAS,EAAEW,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}