{"ast":null,"code":"import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport reducerContador from \"../reducer/Counter\";\n\n//si tengo varios reducer puedo combinarlos aca\nconst rootReducer = combineReducers({\n  counter: reducerContador\n  // other: otherReducer,\n});\nconst store = configureStore({\n  reducer: rootReducer\n});\n\n/*\ncombineReducers se utiliza para combinar múltiples reducers en un solo reducer raíz.\nRootState se define utilizando ReturnType<typeof rootReducer>, lo que significa que es el tipo del valor de retorno de rootReducer. En otras palabras, RootState representa el tipo del estado completo de la aplicación.\n\n*/\n\nexport default store;","map":{"version":3,"names":["configureStore","combineReducers","reducerContador","rootReducer","counter","store","reducer"],"sources":["/media/ariel/ssd Datos_aux/typescript/wks-typescript/client/src/Redux/store/store.ts"],"sourcesContent":["import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport reducerContador from \"../reducer/Counter\";\n\n//si tengo varios reducer puedo combinarlos aca\nconst rootReducer = combineReducers({\n  counter: reducerContador,\n  // other: otherReducer,\n});\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\n/*\ncombineReducers se utiliza para combinar múltiples reducers en un solo reducer raíz.\nRootState se define utilizando ReturnType<typeof rootReducer>, lo que significa que es el tipo del valor de retorno de rootReducer. En otras palabras, RootState representa el tipo del estado completo de la aplicación.\n\n*/\n\nexport default store;\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,eAAe,QAAQ,kBAAkB;AAClE,OAAOC,eAAe,MAAM,oBAAoB;;AAEhD;AACA,MAAMC,WAAW,GAAGF,eAAe,CAAC;EAClCG,OAAO,EAAEF;EACT;AACF,CAAC,CAAC;AAEF,MAAMG,KAAK,GAAGL,cAAc,CAAC;EAC3BM,OAAO,EAAEH;AACX,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;;AAEA,eAAeE,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}