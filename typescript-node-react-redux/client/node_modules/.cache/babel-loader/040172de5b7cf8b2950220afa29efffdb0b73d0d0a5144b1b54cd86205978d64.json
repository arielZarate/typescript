{"ast":null,"code":"import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport CounterSlices from \"./feactures/counter/CounterSlices\";\nimport UserSlices from \"./feactures/user/UserSlices\";\n//combineReducers se utiliza para combinar múltiples reducers en un solo reducer raíz.\nconst rootReducer = combineReducers({\n  counterSlices: CounterSlices,\n  //es otra forma de hacerlo con el Slices\n  UserSlices: UserSlices\n});\nconst store = configureStore({\n  reducer: rootReducer\n});\nexport default store;\n\n/*\n\nRootState se define utilizando ReturnType<typeof rootReducer>, \nlo que significa que es el tipo del valor de retorno de rootReducer. \nEn otras palabras, RootState representa el tipo del estado completo de la aplicación.\n\n*/","map":{"version":3,"names":["configureStore","combineReducers","CounterSlices","UserSlices","rootReducer","counterSlices","store","reducer"],"sources":["/media/ariel/ssd Datos_aux/typescript/wks-typescript/client/src/Redux/store.ts"],"sourcesContent":["import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\n\nimport CounterSlices from \"./feactures/counter/CounterSlices\";\nimport UserSlices from \"./feactures/user/UserSlices\";\n//combineReducers se utiliza para combinar múltiples reducers en un solo reducer raíz.\nconst rootReducer = combineReducers({\n  counterSlices: CounterSlices, //es otra forma de hacerlo con el Slices\n  UserSlices: UserSlices,\n});\n\nconst store = configureStore({\n  reducer: rootReducer,\n});\n\nexport default store;\n\n/*\n\nRootState se define utilizando ReturnType<typeof rootReducer>, \nlo que significa que es el tipo del valor de retorno de rootReducer. \nEn otras palabras, RootState representa el tipo del estado completo de la aplicación.\n\n*/\n\nexport type RootState = ReturnType<typeof rootReducer>;\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,eAAe,QAAQ,kBAAkB;AAElE,OAAOC,aAAa,MAAM,mCAAmC;AAC7D,OAAOC,UAAU,MAAM,6BAA6B;AACpD;AACA,MAAMC,WAAW,GAAGH,eAAe,CAAC;EAClCI,aAAa,EAAEH,aAAa;EAAE;EAC9BC,UAAU,EAAEA;AACd,CAAC,CAAC;AAEF,MAAMG,KAAK,GAAGN,cAAc,CAAC;EAC3BO,OAAO,EAAEH;AACX,CAAC,CAAC;AAEF,eAAeE,KAAK;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}