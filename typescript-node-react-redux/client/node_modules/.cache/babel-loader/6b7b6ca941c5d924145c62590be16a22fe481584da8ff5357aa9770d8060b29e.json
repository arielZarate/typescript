{"ast":null,"code":"import { addUser } from \"../feactures/user/UserSlices\";\n//import { useAppDispatch } from \"../../hooks/useStore\";\nlet uri = \"http://localhost:3001/api/user\";\nconst fetchUser = async () => {\n  try {\n    const res = await fetch(uri);\n    const users = await res.json(); //la nfo esta en json() si es axios se usa .data();\n\n    return users;\n  } catch (error) {\n    if (error instanceof Error) {\n      console.log(error.message);\n    }\n  }\n};\n\n// Funci贸n para agregar un usuario\nconst addUserToServer = async (user, dispatch) =>\n//async (dispatch: AppDispatch) =>\n{\n  const res = await fetch(uri, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  });\n  if (!res.ok) {\n    throw new Error(\"Failed to add user\");\n  }\n  const newUser = await res.json();\n\n  //de esta forma pasando aca el dispatch se abstrae mejor\n  dispatch(addUser(newUser)); // Dispatch de la acci贸n para agregar el nuevo usuario\n  return newUser;\n};\nexport { fetchUser, addUserToServer };","map":{"version":3,"names":["addUser","uri","fetchUser","res","fetch","users","json","error","Error","console","log","message","addUserToServer","user","dispatch","method","headers","body","JSON","stringify","ok","newUser"],"sources":["/media/ariel/ssd Datos_aux/typescript/wks-typescript/client/src/Redux/thunk/UserThunks.ts"],"sourcesContent":["import { addUser } from \"../feactures/user/UserSlices\";\nimport { AppDispatch } from \"../store\";\n\n//import { useAppDispatch } from \"../../hooks/useStore\";\nlet uri = \"http://localhost:3001/api/user\";\n\nconst fetchUser = async () => {\n  try {\n    const res = await fetch(uri);\n    const users = await res.json(); //la nfo esta en json() si es axios se usa .data();\n\n    return users;\n  } catch (error) {\n    if (error instanceof Error) {\n      console.log(error.message);\n    }\n  }\n};\n\n// Funci贸n para agregar un usuario\nconst addUserToServer = async (\n  user: { name: string; lastName: string },\n  dispatch: AppDispatch\n) =>\n  //async (dispatch: AppDispatch) =>\n  {\n    const res = await fetch(uri, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(user),\n    });\n    if (!res.ok) {\n      throw new Error(\"Failed to add user\");\n    }\n    const newUser = await res.json();\n\n    //de esta forma pasando aca el dispatch se abstrae mejor\n    dispatch(addUser(newUser)); // Dispatch de la acci贸n para agregar el nuevo usuario\n    return newUser;\n  };\n\nexport { fetchUser, addUserToServer };\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,8BAA8B;AAGtD;AACA,IAAIC,GAAG,GAAG,gCAAgC;AAE1C,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;EAC5B,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACH,GAAG,CAAC;IAC5B,MAAMI,KAAK,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC;;IAEhC,OAAOD,KAAK;EACd,CAAC,CAAC,OAAOE,KAAK,EAAE;IACd,IAAIA,KAAK,YAAYC,KAAK,EAAE;MAC1BC,OAAO,CAACC,GAAG,CAACH,KAAK,CAACI,OAAO,CAAC;IAC5B;EACF;AACF,CAAC;;AAED;AACA,MAAMC,eAAe,GAAG,MAAAA,CACtBC,IAAwC,EACxCC,QAAqB;AAErB;AACA;EACE,MAAMX,GAAG,GAAG,MAAMC,KAAK,CAACH,GAAG,EAAE;IAC3Bc,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI;EAC3B,CAAC,CAAC;EACF,IAAI,CAACV,GAAG,CAACiB,EAAE,EAAE;IACX,MAAM,IAAIZ,KAAK,CAAC,oBAAoB,CAAC;EACvC;EACA,MAAMa,OAAO,GAAG,MAAMlB,GAAG,CAACG,IAAI,CAAC,CAAC;;EAEhC;EACAQ,QAAQ,CAACd,OAAO,CAACqB,OAAO,CAAC,CAAC,CAAC,CAAC;EAC5B,OAAOA,OAAO;AAChB,CAAC;AAEH,SAASnB,SAAS,EAAEU,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}